gplink-2.2.18 (Apr 13 2020)
Listing File Generated: 2020-9-13  15:44:54
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;******************************************************************************
                                           ;  *   	@MCU   	   	   	   	 : MC35P7040
                                           ;  *   	@Create Date         : 2020.01.09
                                           ;  *   	@Author/Corporation  : Martin/SinoMCU
                                           ;  *   	@技术支持QQ群   	  : 814641858      
                                           ;  *    @晟矽微官方论坛   	  : http://bbs.sinomcu.com/	 
                                           ;  *   	@Copyright           : 2019 SINOMCU Corporation,All Rights Reserved.
                                           ;  *----------------------Abstract Description---------------------------------        	
                                           ;  	   	   	P54 1ms翻转,P53输出PWM,P00唤醒,P40.P41.VDDAD采集  
                                           ;          	 两个校准实际应用是二选一
                                           ;          	 偏0   选零点校准
                                           ;          	 偏vdd 选顶点校准 
                                           ;******************************************************************************
                                           
                                           #include "MC35P7040.INC"
                                           		LIST
                                           ;mc35p7040.inc    Standard Header File, Version 1.00 by Sinomcu
                                           		NOLIST
                                           
                                           cblock 0x0000
                                           r0x0001
                                           timer0_count1:2
                                           flag1
                                           endc
                                           
                                           #define	FLAG_TIMER0_5000ms 	flag1,0
                                           
                                           
                                                   org    	0x0000
000000   8024     goto    0x24                     goto   	MAIN   	   	
                                           
                                                   org    	0x8
000008   8009     goto    0x9                      goto   	INT_ISR	   	;中断
                                              
                                           
                                           INT_ISR:
000009   0400     push                            	push
                                                  	
00000a   5dc8     jbset   0xc8, 0x5               	JBSET   T0IF
00000b   8022     goto    0x22                    	GOTO   	INTER_END
00000c   5dc9     jbset   0xc9, 0x5               	JBSET  	T0IE
00000d   8022     goto    0x22                    	GOTO   	INTER_END
00000e   45c8     bclr    0xc8, 0x5               	BCLR   	T0IF
00000f   2d08     movai   0x8                 	   	MOVAI  	00001000B
000010   1cd5     xorra   0xd5                	   	XORRA  	IOP5   	   	    ;  P54D取反
                                           
000011   1601     jzr     0x1                     	JZR    	timer0_count1
000012   8015     goto    0x15                	   	GOTO   	$+3
000013   1602     jzr     0x2                     	JZR    	(timer0_count1 + 1)
000014   0000     nop                         	   	NOP
                                                  	;timer0_count1 >= 5000
000015   2d13     movai   0x13                    	MOVAI  	0x13
000016   2202     asubar  0x2                     	ASUBAR 	(timer0_count1 + 1)
000017   5a86     jbset   0x86, 0x2               	JBSET  	C
000018   8022     goto    0x22                	   	GOTO   	INTER_END
000019   5886     jbset   0x86, 0             	   	JBSET  	Z
00001a   8022     goto    0x22                	   	GOTO   	INTER_END
00001b   2d88     movai   0x88                    	MOVAI  	0x88
00001c   2201     asubar  0x1                     	ASUBAR 	timer0_count1
00001d   5a86     jbset   0x86, 0x2               	JBSET  	C
00001e   8022     goto    0x22                    	GOTO   	INTER_END
                                           
00001f   2b01     clrr    0x1                     	CLRR   	timer0_count1
000020   2b02     clrr    0x2                     	CLRR   	(timer0_count1 + 1)
000021   4803     bset    0x3, 0                  	BSET   	FLAG_TIMER0_5000ms
                                           INTER_END:
000022   0500     pop                             	pop
                                                  	
000023   0f00     retie                           	RETIE  	
                                           
                                           MAIN:
000024   c053     call    0x53                    	CALL   	Sys_Init
                                           
                                           MAIN_LOOP:
                                           ;*****************AD采集**********************
000025   1eb1     movar   0xb1                	   	MOVAR  	ADM
000026   2af8     andai   0xf8                	   	ANDAI  	0xf8   	   	   	
000027   1a00     orai    0                   	   	ORAI   	0x00   	;通道0   	   	P40
000028   1fb1     movra   0xb1                	   	MOVRA  	ADM
000029   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	
00002a   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	;切换通道舍去前面两次采集
00002b   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	;demo演示，实际使用客户自行滤波     	
00002c   1eb1     movar   0xb1                	   	MOVAR  	ADM
00002d   2af8     andai   0xf8                	   	ANDAI  	0xf8   	   	   	
00002e   1a01     orai    0x1                 	   	ORAI   	0x01   	;通道1   	   	P41
00002f   1fb1     movra   0xb1                	   	MOVRA  	ADM
000030   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	
000031   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	;切换通道舍去前面两次采集
000032   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	;demo演示，实际使用客户自行滤波 
000033   1eb1     movar   0xb1                	   	MOVAR  	ADM
000034   2af8     andai   0xf8                	   	ANDAI  	0xf8   	   	   	
000035   1a05     orai    0x5                 	   	ORAI   	0x05   	;通道VDD     	
000036   1fb1     movra   0xb1                	   	MOVRA  	ADM
000037   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	
000038   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	;切换通道舍去前面两次采集
000039   c04e     call    0x4e                	   	CALL   	ADC_Get_Value  	;demo演示，实际使用客户自行滤波 
                                           ;*****************休眠************************
                                              	   	;5000ms进入休眠
00003a   5803     jbset   0x3, 0                  	JBSET  	FLAG_TIMER0_5000ms
00003b   8025     goto    0x25                    	GOTO   	MAIN_LOOP
00003c   4003     bclr    0x3, 0                  	BCLR   	FLAG_TIMER0_5000ms
                                              	  ;    	休眠关闭外设
00003d   47df     bclr    0xdf, 0x7               	BCLR   	GIE
00003e   47b1     bclr    0xb1, 0x7               	BCLR   	ADEN
00003f   40dc     bclr    0xdc, 0                 	BCLR   	PWM1OE
000040   47dc     bclr    0xdc, 0x7               	BCLR   	T1EN
000041   2bd5     clrr    0xd5                    	CLRR   	IOP5
000042   0000     nop                             	nop
000043   2de7     movai   0xe7                    	MOVAI  	0xe7
000044   29ca     andra   0xca                    	ANDRA  	OSCM
000045   4bca     bset    0xca, 0x3               	BSET   	OSCM,3
000046   0000     nop                             	nop   
000047   0000     nop                             	nop
000048   0000     nop                             	nop	
000049   4fdf     bset    0xdf, 0x7               	BSET   	GIE
00004a   48dc     bset    0xdc, 0                 	BSET   	PWM1OE
00004b   4fdc     bset    0xdc, 0x7               	BSET   	T1EN
                                              	   	 ; 唤醒后开启外设
00004c   4fb1     bset    0xb1, 0x7               	BSET   	ADEN
00004d   8025     goto    0x25                    	GOTO   	MAIN_LOOP
                                           
                                           
                                           ADC_Get_Value:
00004e   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
00004f   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
000050   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
000051   8050     goto    0x50                    	GOTO   	$-1
000052   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Get_Value
                                               
                                           Sys_Init:
000053   47df     bclr    0xdf, 0x7               	BCLR   	GIE
000054   c13a     call    0x13a                   	CALL   	CLR_RAM
000055   c12a     call    0x12a                   	CALL   	IO_Init
                                           ADC_ADJ_INIT:
                                              	   	;        两个校准实际应用是二选一
                                              	   	;        偏0   选零点校准
                                              	   	;        偏vdd 选顶点校准 
000056   c0c0     call    0xc0                    	CALL   	ADC_Zero_ADJ
000057   1f00     movra   0                       	MOVRA  	r0x0001
000058   1e00     movar   0                       	MOVAR   r0x0001
000059   5886     jbset   0x86, 0                 	JBSET  	Z
00005a   8056     goto    0x56                    	GOTO   	ADC_ADJ_INIT   	   	;demo演示 ，此处校准失败一直校准，处于循环
                                              	   	
                                              ;   	   	CALL   	ADC_Vertex_ADJ
                                              ;       	MOVRA  	r0x0001
                                              ;       	MOVAR   r0x0001
                                              ;       	JBSET  	Z
                                              ;       	GOTO   	ADC_ADJ_INIT   	   	;demo演示 ，此处校准失败一直校准，处于循环
                                           
00005b   c121     call    0x121                   	CALL   	TIMER0_INT_Init  
00005c   c11c     call    0x11c                   	CALL   	TIMER1_PWM_Init   
00005d   c116     call    0x116                   	CALL   	ADC_Init
00005e   4fdf     bset    0xdf, 0x7               	BSET   	GIE
00005f   0e00     return                          	RETURN 	
                                               ; exit point of _Sys_Init
                                           ADC_Vertex_ADJ:
                                               ;  	顶点校准   ADTR[4:0]=0x10
000060   2dd0     movai   0xd0                    	MOVAI  	0xd0
000061   1fb4     movra   0xb4                    	MOVRA   ADT
000062   2baf     clrr    0xaf                    	CLRR   	VREFCR 	;  内部2V
000063   2bb3     clrr    0xb3                    	CLRR   	ADR	; 64分频
000064   4cb1     bset    0xb1, 0x4               	BSET   	GCHS
000065   4fb1     bset    0xb1, 0x7               	BSET   	ADEN
000066   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000067   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000068   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
000069   8068     goto    0x68                    	GOTO   	$-1
                                               ;  结果是否为0x0fff
00006a   1eb2     movar   0xb2                    	MOVAR  	ADB
00006b   1dff     xorai   0xff                    	XORAI  	0xff
00006c   5886     jbset   0x86, 0                 	JBSET  	Z
00006d   80a6     goto    0xa6                    	GOTO   	ADC_ADJ_VER_ADD
00006e   2d0f     movai   0xf                     	MOVAI  	0x0f
00006f   28b3     andar   0xb3                    	ANDAR  	ADR
000070   1d0f     xorai   0xf                     	XORAI  	0x0f
000071   5886     jbset   0x86, 0                 	JBSET  	Z
000072   80a6     goto    0xa6                    	GOTO   	ADC_ADJ_VER_ADD
                                           
000073   2de0     movai   0xe0                    	MOVAI  	0xe0
000074   29b4     andra   0xb4                    	ANDRA  	ADT
                                           
000075   2d0f     movai   0xf                     	MOVAI  	0x0f
000076   19b4     orra    0xb4                    	ORRA   	ADT
000077   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000078   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000079   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
00007a   8079     goto    0x79                    	GOTO   	$-1
                                               ;  	结果是否为0x0fff
00007b   1eb2     movar   0xb2                    	MOVAR  	ADB
00007c   1dff     xorai   0xff                    	XORAI  	0xff
00007d   5886     jbset   0x86, 0                 	JBSET  	Z
00007e   8089     goto    0x89                    	GOTO   	ADC_ADJ_VER_DEC
00007f   2d0f     movai   0xf                     	MOVAI  	0x0f
000080   28b3     andar   0xb3                    	ANDAR  	ADR
000081   1d0f     xorai   0xf                     	XORAI  	0x0f
000082   5886     jbset   0x86, 0                 	JBSET  	Z
000083   8089     goto    0x89                    	GOTO   	ADC_ADJ_VER_DEC
                                           
000084   2d3f     movai   0x3f                    	MOVAI  	0x3f
000085   29b4     andra   0xb4                    	ANDRA  	ADT	   	   	;正常模式
000086   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
000087   2d00     movai   0                       	MOVAI  	0x00   	   	;PASS
000088   80bf     goto    0xbf                    	GOTO   	ADC_VER_ADJ_END 
                                           ADC_ADJ_VER_DEC:
000089   1eb4     movar   0xb4                    	MOVAR  	ADT
00008a   2a0f     andai   0xf                     	ANDAI  	0x0f
00008b   5086     jbclr   0x86, 0                 	JBCLR  	Z
00008c   80a1     goto    0xa1                    	GOTO   	ADC_ADJ_VER_FAIL1
00008d   26b4     djzr    0xb4                    	DJZR   	ADT
00008e   0000     nop                             	NOP	
00008f   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000090   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000091   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
000092   8091     goto    0x91                    	GOTO   	$-1
                                               ;  结果是否为0x0fff
000093   1eb2     movar   0xb2                    	MOVAR  	ADB
000094   1dff     xorai   0xff                    	XORAI  	0xff
000095   5886     jbset   0x86, 0                 	JBSET  	Z
000096   8089     goto    0x89                    	GOTO   	ADC_ADJ_VER_DEC
000097   2d0f     movai   0xf                     	MOVAI  	0x0f
000098   28b3     andar   0xb3                    	ANDAR  	ADR
000099   1d0f     xorai   0xf                     	XORAI  	0x0f
00009a   5886     jbset   0x86, 0                 	JBSET  	Z
00009b   8089     goto    0x89                    	GOTO   	ADC_ADJ_VER_DEC
                                               ;   正常模式
00009c   2d3f     movai   0x3f                    	MOVAI  	0x3f
00009d   29b4     andra   0xb4                    	ANDRA  	ADT
00009e   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
00009f   2d00     movai   0                       	MOVAI  	0x00   	;PASS
0000a0   80bf     goto    0xbf                    	GOTO   	ADC_VER_ADJ_END
                                           ADC_ADJ_VER_FAIL1:
0000a1   2d3f     movai   0x3f                	   	MOVAI  	0x3f
0000a2   29b4     andra   0xb4                    	ANDRA  	ADT	   	   	;正常模式
0000a3   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
0000a4   2d01     movai   0x1                     	MOVAI  	0x01   	   	   	;FAIL
0000a5   80bf     goto    0xbf                    	GOTO   	ADC_VER_ADJ_END
                                           ADC_ADJ_VER_ADD:   	
0000a6   2d0f     movai   0xf                     	MOVAI  	0x0f
0000a7   28b4     andar   0xb4                    	ANDAR  	ADT
0000a8   1d0f     xorai   0xf                     	XORAI  	0x0f   	   	;是否加到0x0f 
0000a9   5886     jbset   0x86, 0                 	JBSET  	Z
0000aa   80ac     goto    0xac                    	GOTO   	$+2
0000ab   80a1     goto    0xa1                    	GOTO   	ADC_ADJ_VER_FAIL1
                                           
0000ac   2d01     movai   0x1                     	MOVAI  	0x01
0000ad   13b4     addra   0xb4                    	ADDRA  	ADT
0000ae   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
0000af   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
0000b0   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
0000b1   80b0     goto    0xb0                    	GOTO   	$-1
                                               ; 结果是否为0x0fff
0000b2   1eb2     movar   0xb2                    	MOVAR  	ADB
0000b3   1dff     xorai   0xff                    	XORAI  	0xff
0000b4   5886     jbset   0x86, 0                 	JBSET  	Z
0000b5   80a6     goto    0xa6                    	GOTO   	ADC_ADJ_VER_ADD
0000b6   2d0f     movai   0xf                     	MOVAI  	0x0f
0000b7   28b3     andar   0xb3                    	ANDAR  	ADR
0000b8   1d0f     xorai   0xf                     	XORAI  	0x0f
0000b9   5886     jbset   0x86, 0                 	JBSET  	Z
0000ba   80a6     goto    0xa6                    	GOTO   	ADC_ADJ_VER_ADD
                                            
0000bb   2d3f     movai   0x3f                    	MOVAI  	0x3f   	
0000bc   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
0000bd   29b4     andra   0xb4                    	ANDRA  	ADT	   ;正常模式
0000be   2d00     movai   0                       	MOVAI  	0x00   ;PASS
                                           ADC_VER_ADJ_END:
0000bf   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Vertex_ADJ
                                               
                                           ADC_Zero_ADJ:
0000c0   2d80     movai   0x80                    	MOVAI  	0x80
0000c1   1fb4     movra   0xb4                    	MOVRA  	ADT	   	;零点校准   ADTR[4:0]=0
0000c2   2baf     clrr    0xaf                    	CLRR   	VREFCR 	    ;内部2V
0000c3   2bb3     clrr    0xb3                    	CLRR   	ADR	   ;64分频
0000c4   4cb1     bset    0xb1, 0x4               	BSET   	GCHS
0000c5   4fb1     bset    0xb1, 0x7               	BSET   	ADEN
0000c6   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
0000c7   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
0000c8   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
0000c9   80c8     goto    0xc8                    	GOTO   	$-1
                                               ;  	结果是否为0
0000ca   1eb2     movar   0xb2                    	MOVAR   ADB
0000cb   5886     jbset   0x86, 0                 	JBSET  	Z
0000cc   80fe     goto    0xfe                    	GOTO   	ADC_ADJ_ZERO_ADD
0000cd   1eb3     movar   0xb3                    	MOVAR  	ADR
0000ce   2a0f     andai   0xf                     	ANDAI  	0x0f
0000cf   5886     jbset   0x86, 0                 	JBSET  	Z
0000d0   80fe     goto    0xfe                    	GOTO   	ADC_ADJ_ZERO_ADD
0000d1   2d1f     movai   0x1f                    	MOVAI  	0x1f
0000d2   19b4     orra    0xb4                    	ORRA   	ADT
0000d3   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
0000d4   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
0000d5   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
0000d6   80d5     goto    0xd5                    	GOTO   	$-1
                                               ;  	结果是否为0
0000d7   1eb2     movar   0xb2                    	MOVAR   ADB
0000d8   5886     jbset   0x86, 0                 	JBSET  	Z
0000d9   80e3     goto    0xe3                    	GOTO   	ADC_ADJ_ZERO_DEC
0000da   1eb3     movar   0xb3                    	MOVAR  	ADR
0000db   2a0f     andai   0xf                     	ANDAI  	0x0f
0000dc   5886     jbset   0x86, 0                 	JBSET  	Z
0000dd   80e3     goto    0xe3                    	GOTO   	ADC_ADJ_ZERO_DEC
                                               ;  正常模式
0000de   2d3f     movai   0x3f                    	MOVAI  	0x3f
0000df   29b4     andra   0xb4                    	ANDRA  	ADT  
0000e0   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
0000e1   2d00     movai   0                       	MOVAI  	0x00   	   	;PASS
0000e2   8115     goto    0x115                   	GOTO   	ADC_ZERO_ADJ_END
                                           ADC_ADJ_ZERO_DEC:
0000e3   1eb4     movar   0xb4                    	MOVAR  	ADT
0000e4   2a0f     andai   0xf                     	ANDAI  	0x0f
0000e5   5086     jbclr   0x86, 0                 	JBCLR  	Z
0000e6   80f9     goto    0xf9                    	GOTO   	ADC_ADJ_ZERO_FAIL1
0000e7   26b4     djzr    0xb4                    	DJZR   	ADT
0000e8   0000     nop                             	NOP	
0000e9   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
0000ea   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
0000eb   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
0000ec   80eb     goto    0xeb                    	GOTO   	$-1
                                               ;  结果是否为0
0000ed   1eb2     movar   0xb2                    	MOVAR   ADB
0000ee   5886     jbset   0x86, 0                 	JBSET  	Z
0000ef   80e3     goto    0xe3                    	GOTO   	ADC_ADJ_ZERO_DEC
0000f0   1eb3     movar   0xb3                    	MOVAR  	ADR
0000f1   2a0f     andai   0xf                     	ANDAI  	0x0f
0000f2   5886     jbset   0x86, 0                 	JBSET  	Z
0000f3   80e3     goto    0xe3                    	GOTO   	ADC_ADJ_ZERO_DEC
                                               ;  	正常模式
0000f4   2d3f     movai   0x3f                    	MOVAI  	0x3f
0000f5   29b4     andra   0xb4                    	ANDRA  	ADT
0000f6   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
0000f7   2d00     movai   0                       	MOVAI  	0x00   	;PASS
0000f8   8115     goto    0x115                   	GOTO   	ADC_ZERO_ADJ_END
                                           ADC_ADJ_ZERO_FAIL1:
0000f9   2d3f     movai   0x3f                	   	MOVAI  	0x3f
0000fa   29b4     andra   0xb4                    	ANDRA  	ADT	   	   	;正常模式
0000fb   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
0000fc   2d01     movai   0x1                     	MOVAI  	0x01   	;FAIL
0000fd   8115     goto    0x115                   	GOTO   	ADC_ZERO_ADJ_END
                                           ADC_ADJ_ZERO_ADD:
0000fe   2d0f     movai   0xf                 	   	MOVAI  	0x0f
0000ff   28b4     andar   0xb4                    	ANDAR  	ADT
000100   1d0f     xorai   0xf                     	XORAI  	0x0f
000101   5886     jbset   0x86, 0                 	JBSET  	Z
000102   8104     goto    0x104                   	GOTO   	$+2
000103   80f9     goto    0xf9                    	GOTO   	ADC_ADJ_ZERO_FAIL1
                                           
000104   2d01     movai   0x1                     	MOVAI  	0x01
000105   13b4     addra   0xb4                    	ADDRA  	ADT
000106   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000107   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000108   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
000109   8108     goto    0x108                   	GOTO   	$-1
                                               ;  	结果是否为0
00010a   1eb2     movar   0xb2                    	MOVAR   ADB
00010b   5886     jbset   0x86, 0                 	JBSET  	Z
00010c   80fe     goto    0xfe                    	GOTO   	ADC_ADJ_ZERO_ADD
00010d   1eb3     movar   0xb3                    	MOVAR  	ADR
00010e   2a0f     andai   0xf                     	ANDAI  	0x0f
00010f   5886     jbset   0x86, 0                 	JBSET  	Z
000110   80fe     goto    0xfe                    	GOTO   	ADC_ADJ_ZERO_ADD
                                               ;   正常模式
000111   2d3f     movai   0x3f                    	MOVAI  	0x3f
000112   29b4     andra   0xb4                    	ANDRA  	ADT
000113   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
000114   2d00     movai   0                       	MOVAI  	0x00   	;PASS
                                           ADC_ZERO_ADJ_END:
000115   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Zero_ADJ
                                               
                                           ADC_Init:
000116   2bb1     clrr    0xb1                    	CLRR   	ADM
000117   2d90     movai   0x90                    	MOVAI  	0x90
000118   19b1     orra    0xb1                    	ORRA   	ADM
000119   2baf     clrr    0xaf                    	CLRR   	VREFCR 	    ;  	内部2V
00011a   2bb3     clrr    0xb3                    	CLRR   	ADR	    ;   adc时钟  Fcpu/64
00011b   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Init
                                           TIMER1_PWM_Init:
00011c   2df1     movai   0xf1                    	MOVAI  	0xf1
00011d   1fdc     movra   0xdc                    	MOVRA  	T1CR
                                               ;  开启T1    1分频  T1CLK内部时钟  开启PWM  256个周期
00011e   2d80     movai   0x80                    	MOVAI  	0x80
00011f   1fde     movra   0xde                    	MOVRA  	T1LDR
000120   0e00     return                          	RETURN 	
                                               ; exit point of _TIMER1_PWM_Init 
                                           TIMER0_INT_Init:
                                               ; T1CLK=FCPU/2      T0CLK=FCPU/2    关闭T0溢出唤醒
000121   2bd8     clrr    0xd8                    	CLRR   	TMRCR
                                               ; 开启T0    32分频  T0CLK内部时钟  自动重载  关闭PWM
000122   2da4     movai   0xa4                    	MOVAI  	0xa4
000123   1fda     movra   0xda                    	MOVRA  	T0CR
000124   2d83     movai   0x83                    	MOVAI  	0x83
000125   1fdb     movra   0xdb                    	MOVRA  	T0CNT
000126   2d83     movai   0x83                    	MOVAI  	0x83
000127   1fcd     movra   0xcd                    	MOVRA  	T0LDR  	   	;  1ms
000128   4dc9     bset    0xc9, 0x5               	BSET   	T0IE
000129   0e00     return                          	RETURN 	
                                               ; exit point of _TIMER0_INT_Init
                                               
                                           IO_Init:
00012a   2bd0     clrr    0xd0                    	CLRR   	IOP0    
00012b   2dfe     movai   0xfe                    	MOVAI  	0xfe
00012c   1fb8     movra   0xb8                    	MOVRA  	OEP0   	   	;  io口方向 1:out  0:in
00012d   2d01     movai   0x1                     	MOVAI  	0x01
00012e   1fe0     movra   0xe0                    	MOVRA  	PUP0   	   	; io口上拉电阻   1:enable  0:disable
00012f   2bd4     clrr    0xd4                    	CLRR   	IOP4
000130   2dfc     movai   0xfc                    	MOVAI  	0xfc
000131   1fc4     movra   0xc4                    	MOVRA  	OEP4   	   	;  io口方向 1:out  0:in
000132   2be4     clrr    0xe4                    	CLRR   	PUP4   	   	; io口上拉电阻   1:enable  0:disable
000133   2bd5     clrr    0xd5                    	CLRR   	IOP5   
000134   2dff     movai   0xff                    	MOVAI  	0xff
000135   1fc5     movra   0xc5                    	MOVRA  	OEP5   	   	; io口方向 1:out  0:in
000136   2be5     clrr    0xe5                    	CLRR   	PUP5       	; io口上拉电阻   1:enable  0:disable
000137   2d03     movai   0x3                     	MOVAI  	0x03
000138   1fae     movra   0xae                    	MOVRA  	P4CON  	   	; P40 P41模拟
000139   0e00     return                          	RETURN 	
                                               ; exit point of _IO_Init
                                           CLR_RAM:
00013a   2d3f     movai   0x3f                    	movai  	0x3F
00013b   1f83     movra   0x83                    	movra  	FSR0
00013c   2b84     clrr    0x84                    	clrr   	FSR1
00013d   2be7     clrr    0xe7                    	clrr   	INDF
00013e   2683     djzr    0x83                    	DJZR   	FSR0
00013f   813d     goto    0x13d                   	goto   	$ -2
000140   2be7     clrr    0xe7                    	clrr   	INDF
000141   0e00     return                          	RETURN 	
                                               ; exit point of _CLR_RAM
                                               
                                               
                                                  	end
                                           
                                           


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XX-------------- XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXX------------ ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   315

