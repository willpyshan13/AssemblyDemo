gplink-2.2.18 (Apr 13 2020)
Listing File Generated: 2020-9-26  20:49:03
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;******************************************************************************
                                           ;  *   	@MCU   	   	   	   	 : MC35P7040
                                           ;  *   	@Create Date         : 2020.09.25
                                           ;  *   	@Author              : pengyushan
                                           ;  *----------------------Abstract Description---------------------------------        	
                                           ;  	   	   	P54 1ms翻转,P53输出PWM,P40.P41.VDDAD采集  
                                           ;          	 
                                           ;           选零点校准
                                           ;          	 
                                           ;******************************************************************************
                                           
                                           #include "MC35P7040.INC"
                                           		LIST
                                           ;mc35p7040.inc    Standard Header File, Version 1.00 by Sinomcu
                                           		NOLIST
                                           
                                           cblock 0x0000
                                           r0x0001
                                           timer0_count1:2
                                           flag1
                                           endc
                                           
                                           #define	FLAG_TIMER0_5000ms 	flag1,0
                                                   org    	0x0000
000000   8008     goto    0x8                      goto   	MAIN   	   	
                                                   org    	0x8
                                           
                                           MAIN:
000008   c035     call    0x35                    	CALL   	Sys_Init
                                           
                                           MAIN_LOOP:
                                           ;*****************AD采集**********************
000009   1eb1     movar   0xb1                	   	MOVAR  	ADM
00000a   2af8     andai   0xf8                	   	ANDAI  	0xf8   	   	   	
00000b   1a00     orai    0                   	   	ORAI   	0x00   	;通道0   	   	P40
00000c   1fb1     movra   0xb1                	   	MOVRA  	ADM
00000d   c030     call    0x30                	   	CALL   	ADC_Get_Value  	
00000e   c030     call    0x30                	   	CALL   	ADC_Get_Value  	;切换通道舍去前面两次采集
00000f   c030     call    0x30                	   	CALL   	ADC_Get_Value  	;demo演示，实际使用客户自行滤波     	
000010   1eb1     movar   0xb1                	   	MOVAR  	ADM
000011   2af8     andai   0xf8                	   	ANDAI  	0xf8   	   	   	
000012   1a01     orai    0x1                 	   	ORAI   	0x01   	;通道1   	   	P41
000013   1fb1     movra   0xb1                	   	MOVRA  	ADM
000014   c030     call    0x30                	   	CALL   	ADC_Get_Value  	
000015   c030     call    0x30                	   	CALL   	ADC_Get_Value  	;切换通道舍去前面两次采集
000016   c030     call    0x30                	   	CALL   	ADC_Get_Value  	;demo演示，实际使用客户自行滤波 
000017   1eb1     movar   0xb1                	   	MOVAR  	ADM
000018   2af8     andai   0xf8                	   	ANDAI  	0xf8   	   	   	
000019   1a05     orai    0x5                 	   	ORAI   	0x05   	;通道VDD     	
00001a   1fb1     movra   0xb1                	   	MOVRA  	ADM
00001b   c030     call    0x30                	   	CALL   	ADC_Get_Value  	
00001c   c030     call    0x30                	   	CALL   	ADC_Get_Value  	;切换通道舍去前面两次采集
00001d   c030     call    0x30                	   	CALL   	ADC_Get_Value  	;demo演示，实际使用客户自行滤波 
                                           ;*****************休眠************************
                                              	   	;5000ms进入休眠
                                                  	;JBSET  	FLAG_TIMER0_5000ms
00001e   8009     goto    0x9                     	GOTO   	MAIN_LOOP
                                                  	;BCLR   	FLAG_TIMER0_5000ms
                                              	  ;    	休眠关闭外设
00001f   47df     bclr    0xdf, 0x7               	BCLR   	GIE
000020   47b1     bclr    0xb1, 0x7               	BCLR   	ADEN
000021   40dc     bclr    0xdc, 0                 	BCLR   	PWM1OE
000022   47dc     bclr    0xdc, 0x7               	BCLR   	T1EN
000023   2bd5     clrr    0xd5                    	CLRR   	IOP5
000024   0000     nop                             	nop
000025   2de7     movai   0xe7                    	MOVAI  	0xe7
000026   29ca     andra   0xca                    	ANDRA  	OSCM
000027   4bca     bset    0xca, 0x3               	BSET   	OSCM,3
000028   0000     nop                             	nop   
000029   0000     nop                             	nop
00002a   0000     nop                             	nop	
00002b   4fdf     bset    0xdf, 0x7               	BSET   	GIE
00002c   48dc     bset    0xdc, 0                 	BSET   	PWM1OE
00002d   4fdc     bset    0xdc, 0x7               	BSET   	T1EN
                                              	   	 ; 唤醒后开启外设
00002e   4fb1     bset    0xb1, 0x7               	BSET   	ADEN
00002f   8009     goto    0x9                     	GOTO   	MAIN_LOOP
                                           
                                           
                                           ADC_Get_Value:
000030   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000031   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
000032   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
000033   8032     goto    0x32                    	GOTO   	$-1
000034   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Get_Value
                                               
                                           Sys_Init:
000035   47df     bclr    0xdf, 0x7               	BCLR   	GIE
000036   c0bb     call    0xbb                    	CALL   	CLR_RAM
000037   c0ab     call    0xab                    	CALL   	IO_Init
                                           ADC_ADJ_INIT:
                                              	   	;        两个校准实际应用是二选一
                                              	   	;        偏0   选零点校准
                                              	   	;        偏vdd 选顶点校准 
000038   c041     call    0x41                    	CALL   	ADC_Zero_ADJ
000039   1f00     movra   0                       	MOVRA  	r0x0001
00003a   1e00     movar   0                       	MOVAR   r0x0001
00003b   5886     jbset   0x86, 0                 	JBSET  	Z
00003c   8038     goto    0x38                    	GOTO   	ADC_ADJ_INIT   	   	;demo演示 ，此处校准失败一直校准，处于循环
00003d   c09d     call    0x9d                    	CALL   	TIMER1_PWM_Init   
00003e   c097     call    0x97                    	CALL   	ADC_Init
00003f   4fdf     bset    0xdf, 0x7               	BSET   	GIE
000040   0e00     return                          	RETURN 	
                                           
                                           ADC_Zero_ADJ:
000041   2d80     movai   0x80                    	MOVAI  	0x80
000042   1fb4     movra   0xb4                    	MOVRA  	ADT	   	;零点校准   ADTR[4:0]=0
000043   2baf     clrr    0xaf                    	CLRR   	VREFCR 	    ;内部2V
000044   2bb3     clrr    0xb3                    	CLRR   	ADR	   ;64分频
000045   4cb1     bset    0xb1, 0x4               	BSET   	GCHS
000046   4fb1     bset    0xb1, 0x7               	BSET   	ADEN
000047   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000048   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000049   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
00004a   8049     goto    0x49                    	GOTO   	$-1
                                               ;  	结果是否为0
00004b   1eb2     movar   0xb2                    	MOVAR   ADB
00004c   5886     jbset   0x86, 0                 	JBSET  	Z
00004d   807f     goto    0x7f                    	GOTO   	ADC_ADJ_ZERO_ADD
00004e   1eb3     movar   0xb3                    	MOVAR  	ADR
00004f   2a0f     andai   0xf                     	ANDAI  	0x0f
000050   5886     jbset   0x86, 0                 	JBSET  	Z
000051   807f     goto    0x7f                    	GOTO   	ADC_ADJ_ZERO_ADD
000052   2d1f     movai   0x1f                    	MOVAI  	0x1f
000053   19b4     orra    0xb4                    	ORRA   	ADT
000054   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000055   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000056   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
000057   8056     goto    0x56                    	GOTO   	$-1
                                               ;  	结果是否为0
000058   1eb2     movar   0xb2                    	MOVAR   ADB
000059   5886     jbset   0x86, 0                 	JBSET  	Z
00005a   8064     goto    0x64                    	GOTO   	ADC_ADJ_ZERO_DEC
00005b   1eb3     movar   0xb3                    	MOVAR  	ADR
00005c   2a0f     andai   0xf                     	ANDAI  	0x0f
00005d   5886     jbset   0x86, 0                 	JBSET  	Z
00005e   8064     goto    0x64                    	GOTO   	ADC_ADJ_ZERO_DEC
                                               ;  正常模式
00005f   2d3f     movai   0x3f                    	MOVAI  	0x3f
000060   29b4     andra   0xb4                    	ANDRA  	ADT  
000061   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
000062   2d00     movai   0                       	MOVAI  	0x00   	   	;PASS
000063   8096     goto    0x96                    	GOTO   	ADC_ZERO_ADJ_END
                                           ADC_ADJ_ZERO_DEC:
000064   1eb4     movar   0xb4                    	MOVAR  	ADT
000065   2a0f     andai   0xf                     	ANDAI  	0x0f
000066   5086     jbclr   0x86, 0                 	JBCLR  	Z
000067   807a     goto    0x7a                    	GOTO   	ADC_ADJ_ZERO_FAIL1
000068   26b4     djzr    0xb4                    	DJZR   	ADT
000069   0000     nop                             	NOP	
00006a   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
00006b   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
00006c   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
00006d   806c     goto    0x6c                    	GOTO   	$-1
                                               ;  结果是否为0
00006e   1eb2     movar   0xb2                    	MOVAR   ADB
00006f   5886     jbset   0x86, 0                 	JBSET  	Z
000070   8064     goto    0x64                    	GOTO   	ADC_ADJ_ZERO_DEC
000071   1eb3     movar   0xb3                    	MOVAR  	ADR
000072   2a0f     andai   0xf                     	ANDAI  	0x0f
000073   5886     jbset   0x86, 0                 	JBSET  	Z
000074   8064     goto    0x64                    	GOTO   	ADC_ADJ_ZERO_DEC
                                               ;  	正常模式
000075   2d3f     movai   0x3f                    	MOVAI  	0x3f
000076   29b4     andra   0xb4                    	ANDRA  	ADT
000077   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
000078   2d00     movai   0                       	MOVAI  	0x00   	;PASS
000079   8096     goto    0x96                    	GOTO   	ADC_ZERO_ADJ_END
                                           ADC_ADJ_ZERO_FAIL1:
00007a   2d3f     movai   0x3f                	   	MOVAI  	0x3f
00007b   29b4     andra   0xb4                    	ANDRA  	ADT	   	   	;正常模式
00007c   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
00007d   2d01     movai   0x1                     	MOVAI  	0x01   	;FAIL
00007e   8096     goto    0x96                    	GOTO   	ADC_ZERO_ADJ_END
                                           ADC_ADJ_ZERO_ADD:
00007f   2d0f     movai   0xf                 	   	MOVAI  	0x0f
000080   28b4     andar   0xb4                    	ANDAR  	ADT
000081   1d0f     xorai   0xf                     	XORAI  	0x0f
000082   5886     jbset   0x86, 0                 	JBSET  	Z
000083   8085     goto    0x85                    	GOTO   	$+2
000084   807a     goto    0x7a                    	GOTO   	ADC_ADJ_ZERO_FAIL1
                                           
000085   2d01     movai   0x1                     	MOVAI  	0x01
000086   13b4     addra   0xb4                    	ADDRA  	ADT
000087   45b1     bclr    0xb1, 0x5               	BCLR   	ADEOC
000088   4eb1     bset    0xb1, 0x6               	BSET   	ADSTR
                                           
000089   5db1     jbset   0xb1, 0x5               	JBSET  	ADEOC
00008a   8089     goto    0x89                    	GOTO   	$-1
                                               ;  	结果是否为0
00008b   1eb2     movar   0xb2                    	MOVAR   ADB
00008c   5886     jbset   0x86, 0                 	JBSET  	Z
00008d   807f     goto    0x7f                    	GOTO   	ADC_ADJ_ZERO_ADD
00008e   1eb3     movar   0xb3                    	MOVAR  	ADR
00008f   2a0f     andai   0xf                     	ANDAI  	0x0f
000090   5886     jbset   0x86, 0                 	JBSET  	Z
000091   807f     goto    0x7f                    	GOTO   	ADC_ADJ_ZERO_ADD
                                               ;   正常模式
000092   2d3f     movai   0x3f                    	MOVAI  	0x3f
000093   29b4     andra   0xb4                    	ANDRA  	ADT
000094   47b1     bclr    0xb1, 0x7           	   	BCLR   	ADEN
000095   2d00     movai   0                       	MOVAI  	0x00   	;PASS
                                           ADC_ZERO_ADJ_END:
000096   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Zero_ADJ
                                               
                                           ADC_Init:
000097   2bb1     clrr    0xb1                    	CLRR   	ADM
000098   2d90     movai   0x90                    	MOVAI  	0x90
000099   19b1     orra    0xb1                    	ORRA   	ADM
00009a   2baf     clrr    0xaf                    	CLRR   	VREFCR 	    ;  	内部2V
00009b   2bb3     clrr    0xb3                    	CLRR   	ADR	    ;   adc时钟  Fcpu/64
00009c   0e00     return                          	RETURN 	
                                               ; exit point of _ADC_Init
                                           TIMER1_PWM_Init:
00009d   2df1     movai   0xf1                    	MOVAI  	0xf1
00009e   1fdc     movra   0xdc                    	MOVRA  	T1CR
                                               ;  开启T1    1分频  T1CLK内部时钟  开启PWM  256个周期
00009f   2d80     movai   0x80                    	MOVAI  	0x80
0000a0   1fde     movra   0xde                    	MOVRA  	T1LDR
0000a1   0e00     return                          	RETURN 	
                                               ; exit point of _TIMER1_PWM_Init 
                                           TIMER0_INT_Init:
                                               ; T1CLK=FCPU/2      T0CLK=FCPU/2    关闭T0溢出唤醒
0000a2   2bd8     clrr    0xd8                    	CLRR   	TMRCR
                                               ; 开启T0    32分频  T0CLK内部时钟  自动重载  关闭PWM
0000a3   2da4     movai   0xa4                    	MOVAI  	0xa4
0000a4   1fda     movra   0xda                    	MOVRA  	T0CR
0000a5   2d83     movai   0x83                    	MOVAI  	0x83
0000a6   1fdb     movra   0xdb                    	MOVRA  	T0CNT
0000a7   2d83     movai   0x83                    	MOVAI  	0x83
0000a8   1fcd     movra   0xcd                    	MOVRA  	T0LDR  	   	;  1ms
0000a9   4dc9     bset    0xc9, 0x5               	BSET   	T0IE        ;开启t0中断
0000aa   0e00     return                          	RETURN 	
                                               ; exit point of _TIMER0_INT_Init
                                               
                                           IO_Init:
0000ab   2bd0     clrr    0xd0                    	CLRR   	IOP0    
0000ac   2dfe     movai   0xfe                    	MOVAI  	0xfe
0000ad   1fb8     movra   0xb8                    	MOVRA  	OEP0   	   	;  io口方向 1:out  0:in
0000ae   2d01     movai   0x1                     	MOVAI  	0x01
0000af   1fe0     movra   0xe0                    	MOVRA  	PUP0   	   	; io口上拉电阻   1:enable  0:disable
0000b0   2bd4     clrr    0xd4                    	CLRR   	IOP4
0000b1   2dfc     movai   0xfc                    	MOVAI  	0xfc
0000b2   1fc4     movra   0xc4                    	MOVRA  	OEP4   	   	;  io口方向 1:out  0:in
0000b3   2be4     clrr    0xe4                    	CLRR   	PUP4   	   	; io口上拉电阻   1:enable  0:disable
0000b4   2bd5     clrr    0xd5                    	CLRR   	IOP5   
0000b5   2dff     movai   0xff                    	MOVAI  	0xff
0000b6   1fc5     movra   0xc5                    	MOVRA  	OEP5   	   	; io口方向 1:out  0:in
0000b7   2be5     clrr    0xe5                    	CLRR   	PUP5       	; io口上拉电阻   1:enable  0:disable
0000b8   2d03     movai   0x3                     	MOVAI  	0x03
0000b9   1fae     movra   0xae                    	MOVRA  	P4CON  	   	; P40 P41模拟
0000ba   0e00     return                          	RETURN 	
                                               ; exit point of _IO_Init
                                           CLR_RAM:
0000bb   2d3f     movai   0x3f                    	movai  	0x3F
0000bc   1f83     movra   0x83                    	movra  	FSR0
0000bd   2b84     clrr    0x84                    	clrr   	FSR1
0000be   2be7     clrr    0xe7                    	clrr   	INDF
0000bf   2683     djzr    0x83                    	DJZR   	FSR0
0000c0   80be     goto    0xbe                    	goto   	$ -2
0000c1   2be7     clrr    0xe7                    	clrr   	INDF
0000c2   0e00     return                          	RETURN 	
                                               ; exit point of _CLR_RAM
                                                  	end
                                           
                                           


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XX-------------- XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXX---------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   188

